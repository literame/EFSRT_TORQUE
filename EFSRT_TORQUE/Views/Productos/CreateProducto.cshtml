@model EFSRT_TORQUE.Models.Productos

@{
    ViewBag.Title = "Agregar Productos";
}

<main class="body">

    <div class="txtTittle">
        <p class="paddistance">Agregar Productos</p>
        <ul>
            <li><ion-icon name="newspaper-outline"></ion-icon></li>
            <li><ion-icon name="notifications-outline"></ion-icon></li>
            <li><ion-icon name="person-outline"></ion-icon></li>
        </ul>
    </div>
    <div>
        <div class="paddistance bannermenu">
            <ul>
                <li><p>Nuevo Productos</p></li>
            </ul>
        </div>
    </div>

    @using (Html.BeginForm("Create", "Productos", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            
            <div class="boxitem">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "itemText" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="boxitem">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "itemText" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="boxitem">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "itemText" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="boxitem">
                @Html.LabelFor(model => model.ProveedorID, htmlAttributes: new { @class = "itemText" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ProveedorID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProveedorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Agregar" class="buttons warning" />
                </div>
            </div>
        </div>
    }

    <div>

        @Html.ActionLink("Volver a la Lista", "ListarProductos", null, new { @class = "buttons info" })


    </div>

</main>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}